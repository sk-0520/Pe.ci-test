name: Build CI/CD

permissions:
  contents: write

on:
  push:
    branches:
    - master
    - ci-test
    - develop
  pull_request:
    branches:
      - develop

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PE_UPDATE_API_ENDPOINT: https://peserver.site/api/administrator/pe/version

jobs:
  build:
    name: Build
    uses: ./.github/workflows/_build-template.yml
    secrets: inherit
    with:
      APPLICATION_ARCHIVE: 7z
      PLUGINS_ARCHIVE: 7z
      IS_PRODUCT: ${{ github.ref != 'refs/heads/develop' }}
      PE_RELEASE_ARCHIVE_BASE_URL: https://github.com/${{ github.repository }}/releases/download/@VERSION@/@ARCHIVENAME@
      PE_RELEASE_NOTE_BASE_URL: https://github.com/${{ github.repository }}/releases/download/@VERSION@/@NOTENAME@
      INVOKE_PLUGIN_TEMPLATE: false

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/ci-test'
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: <Checkout> Repository
        uses: actions/checkout@v4

      - name: <Generate> Version
        id: version
        shell: pwsh
        run: ./Build/generate-version-data.ps1 -InformationAction Continue -TargetRepository 'github'

      - name: <Read> Version
        shell: pwsh
        run: |
          Write-Output 'dot:    ${{ steps.version.outputs.dot }}'
          Write-Output 'hyphen: ${{ steps.version.outputs.hyphen }}'


      - name: <Download> Release Note
        uses: actions/download-artifact@v4
        with:
          name: History
          path: artifacts/history


      - name: <Download> Plugins x86
        uses: actions/download-artifact@v4
        with:
          name: Pe.Plugins.Reference_x86
          path: artifacts/Pe.Plugins.Reference

      - name: <Download> Plugins x64
        uses: actions/download-artifact@v4
        with:
          name: Pe.Plugins.Reference_x64
          path: artifacts/Pe.Plugins.Reference


      - name: <Download> Application x86
        uses: actions/download-artifact@v4
        with:
          name: Pe_x86
          path: artifacts/Pe

      - name: <Download> Application x64
        uses: actions/download-artifact@v4
        with:
          name: Pe_x64
          path: artifacts/Pe


      - name: <Download> Plugins Information
        uses: actions/download-artifact@v4
        with:
          name: Information_Pe.Plugins.Reference
          path: artifacts/info/plugins

      - name: <Download> Application Information
        uses: actions/download-artifact@v4
        with:
          name: Information_Pe
          path: artifacts/info/pe


      - name: <ðŸŒ³> ðŸŒ²
        shell: pwsh
        run: |
          Get-ChildItem artifacts -R -File | Select-Object FullName | Format-Table -AutoSize -Wrap


      - name: <Delete> TEST Tag
        if: github.ref == 'refs/heads/ci-test'
        continue-on-error: true
        uses: ClementTsang/delete-tag-and-release@v0.4.0
        with:
          delete_release: true
          tag_name: ${{ steps.version.outputs.dot }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: <Create> Release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const releaseResult = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              generate_release_notes: true,
              name: '${{ steps.version.outputs.dot }}',
              tag_name: '${{ steps.version.outputs.dot }}',
            });
            return releaseResult['data']['id'];

      - name: <Upload> Assets
        shell: pwsh
        run: ./Build/upload-release-assets.ps1 -InformationAction Continue -TargetRepository 'github' -Token '${{ secrets.GITHUB_TOKEN }}' -ReleaseId '${{ steps.create-release.outputs.result }}' -RepositoryOwner '${{ github.repository_owner }}' -RepositoryName '${{ github.event.repository.name }}'

      # - name: <Upload> Pe.Plugins.Reference.*
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: artifacts/Pe.Plugins.Reference/Pe.Plugins.Reference.*.*
      #     file_glob: true
      #     tag: ${{ steps.version.outputs.dot }}

      # - name: <Upload> Applications
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: artifacts/Pe/Pe_*
      #     file_glob: true
      #     tag: ${{ steps.version.outputs.dot }}


      # - name: <Upload> Html (Application/Pe.Plugins.Reference)
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: artifacts/history/*.html
      #     file_glob: true
      #     tag: ${{ steps.version.outputs.dot }}


      # - name: <Upload> Update Information (Pe.Plugins.Reference)
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: artifacts/info/plugins/update-*.json
      #     file_glob: true
      #     tag: ${{ steps.version.outputs.dot }}

      # - name: <Upload> Update Information (Application)
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: artifacts/info/pe/Output/update.json
      #     file_glob: false
      #     tag: ${{ steps.version.outputs.dot }}

      # - name: <Update> Version API
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     curl -H "X-API-KEY: ${{ secrets.PE_SERVER_API_KEY }}" -H "X-SECRET-KEY: ${{ secrets.PE_SERVER_API_SECRET }}" -X POST ${{ env.PE_UPDATE_API_ENDPOINT }} --data '{ \"version\": \"${{ steps.version.outputs.dot }}\" }'
