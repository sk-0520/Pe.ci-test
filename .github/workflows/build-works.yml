name: Build Works

on:
  push:
    branches-ignore:
      - master
      - ci-test
      - development
  pull_request:
    branches-ignore:
      - master
      - ci-test
      - development

env:
  MAIN_ARCHIVE: tar
  DEFAULT_ARCHIVE: 7z
  MINIMUM_VERSION: 0.91.0
  PE_RELEASE_ARCHIVE_BASE_URL: https://example.com
  PE_RELEASE_NOTE_BASE_URL: https://example.com
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  matrix-build:
    name: Build

    strategy:
      matrix:
        PLATFORM: ["x86", "x64"]

    runs-on: windows-2022

    steps:
      - name: <Checkout> Repository
        uses: actions/checkout@v3

      - name: <Add> msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: <Add> VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: <Add> Node/NPM
        uses: actions/setup-node@v3
        with:
          node-version: 15.14.0
          cache: npm

      - name: <Cache> Nuget
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: <Show> Tools
        run: |
          dotnet --version
          pwsh --version
          7z -version
          exit 0

      - name: <Generate> Data
        shell: pwsh
        run: .\Build\generate-data-files.ps1

      - name: <Install> NPM
        run: npm ci

      - name: <Build> BuildTools
        shell: pwsh
        run: .\Build\make-buildtools.ps1

      - name: <Build> Document
        run: npm run help-ci

      - name: <Artifact> Document
        uses: actions/upload-artifact@v3
        with:
          name: Document
          path: Output\help

      - name: <Build> Application
        shell: pwsh
        run: .\Build\build.ps1 -ProductMode -IgnoreChanged -BuildType BETA -Platforms ${{ matrix.PLATFORM }}

      - name: <Test> Application
        shell: pwsh
        run: .\Build\test.ps1 -MainConfigurations Release -BootConfigurations Release,CI_TEST -Platforms ${{ matrix.PLATFORM }}

      - name: <Archive> Application
        shell: pwsh
        run: .\Build\compress.ps1 -MainArchive ${{ env.MAIN_ARCHIVE }} -DefaultArchive ${{ env.DEFAULT_ARCHIVE }} -Platforms ${{ matrix.PLATFORM }}

      - name: <Make> update info
        shell: pwsh
        run: .\Build\create-updateinfo.ps1 -TargetRepository github -MinimumVersion ${{ env.MINIMUM_VERSION }} -ArchiveBaseUrl ${{ env.PE_RELEASE_ARCHIVE_BASE_URL }} -NoteBaseUrl ${{ env.PE_RELEASE_NOTE_BASE_URL }} -ReleaseDirectory Output -MainArchive ${{ env.MAIN_ARCHIVE }} -DefaultArchive ${{ env.DEFAULT_ARCHIVE }} -Platforms ${{ matrix.PLATFORM }}

      - name: <Make> release note
        shell: pwsh
        run: .\Build\create-release-note.ps1

      - name: <Artifact> Application
        uses: actions/upload-artifact@v3
        with:
          name: Pe-${{ matrix.PLATFORM }}
          path: |
            Output\Pe_*.${{ env.MAIN_ARCHIVE }}
            Output\Pe_*.html
            Output\Pe_*.md
            Output\*-tag.json
            Output\update.json
            Output\gen-*

      - name: <Artifact> Pe.Plugins.Reference
        uses: actions/upload-artifact@v3
        with:
          name: Pe.Plugins.Reference-${{ matrix.PLATFORM }}
          path: |
            Output\Pe.Plugins.Reference.*_${{ matrix.PLATFORM }}.${{ env.DEFAULT_ARCHIVE }}
            Output\Pe.Plugins.Reference.*.html
            Output\update-Pe.Plugins.Reference.*.json

  analyze:
    name: CodeQL
    runs-on: windows-2022
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'csharp', 'javascript', 'typescript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
